name: Contact Form Monitor

on:
  schedule:
    - cron: '*/15 * * * *'  # Every 15 minutes
  workflow_dispatch:  # Allow manual triggering

# Add permissions for the workflow to write to the repository
permissions:
  contents: write  # Allow pushing changes back to repo

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver
          
      - name: Verify Chrome installation
        run: |
          chromium-browser --version || google-chrome --version || chromium --version
          ls -la /usr/bin/*chrome* || true
          ls -la /usr/bin/*driver* || true
          
      - name: Create items.py configuration
        run: |
          cat > items.py << EOF
          EMAIL = "${{ secrets.EMAIL }}"
          PASSWORD = "${{ secrets.EMAIL_PASSWORD }}"
          API_KEY = "${{ secrets.API_KEY }}"
          API_URL = "${{ secrets.API_URL }}"
          ADMIN_URL = "${{ secrets.ADMIN_URL }}"
          ADMIN_PASSWORD = "${{ secrets.ADMIN_PASSWORD }}"
          DISCORD_WEBHOOK = "${{ secrets.DISCORD_WEBHOOK }}"
          EOF
      
      - name: Debug - List files in working directory
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Looking for Python files:"
          find . -name "*.py" -type f
          echo "Looking for selenium files:"
          find . -name "*selenium*" -type f
      
      - name: Run contact monitor
        run: |
          export PATH=$PATH:/usr/bin
          python selenium_contact_monitor.py
        env:
          # Ensure Chrome runs in headless mode in CI
          DISPLAY: :99
      
      - name: Commit and push updated message count
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if last_message_count.txt has changes
          if git diff --quiet last_message_count.txt; then
            echo "No changes to message count file"
          else
            echo "Message count file updated, committing changes"
            git add last_message_count.txt
            git commit -m "Update message count from automated monitor [skip ci]"
            git push
          fi
        continue-on-error: true  # Don't fail the workflow if git operations fail
      
      - name: Upload logs (if failed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: monitor-logs
          path: |
            *.log
            last_message_count.txt
          retention-days: 7